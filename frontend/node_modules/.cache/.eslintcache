[{"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\index.js":"1","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\store.js":"2","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\App.js":"3","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\productReducers.js":"7","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\orderReducers.js":"8","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Scrollintoview.js":"9","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Home.js":"10","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Shop.js":"11","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Notfoundpage.js":"12","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Contactus\\Contactus.js":"13","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\About\\About.js":"14","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\RegisterScreen.js":"15","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Nav.js":"16","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\checkout\\Checkout.js":"17","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Cart\\Cartpage.js":"18","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ProfileScreen.js":"19","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Login\\LoginScreen.js":"20","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Product\\Productpage.js":"21","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Footer\\Footer.js":"22","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\products\\products.js":"23","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Order\\Order.js":"24","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\placeorder\\Placeorder.js":"25","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Userslist\\Users.js":"26","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Orders\\Orders.js":"27","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Editproduct\\Editproduct.js":"28","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Useredit\\Edituser.js":"29","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Cardscg.js":"30","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ProductsC.js":"31","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Slider.js":"32","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\CgDiv.js":"33","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Searchnav.js":"34","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Empty.js":"35","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Productoncart.js":"36","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\cartConstants.js":"37","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\orderConstants.js":"38","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\productConstants.js":"39","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\userConstants.js":"40","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\orderActions.js":"42","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\productActions.js":"43","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\userActions.js":"44","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Rating.js":"45","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Search.js":"46","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ShopNowBtn.js":"47","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\CardProduct.js":"48"},{"size":578,"mtime":1683465347892,"results":"49","hashOfConfig":"50"},{"size":2292,"mtime":1683465347920,"results":"51","hashOfConfig":"50"},{"size":3309,"mtime":1683465347869,"results":"52","hashOfConfig":"50"},{"size":375,"mtime":1683465347920,"results":"53","hashOfConfig":"50"},{"size":1317,"mtime":1683465347918,"results":"54","hashOfConfig":"50"},{"size":3939,"mtime":1683465347919,"results":"55","hashOfConfig":"50"},{"size":3578,"mtime":1683465347919,"results":"56","hashOfConfig":"50"},{"size":4017,"mtime":1683465347918,"results":"57","hashOfConfig":"50"},{"size":399,"mtime":1683465347876,"results":"58","hashOfConfig":"50"},{"size":843,"mtime":1683467577961,"results":"59","hashOfConfig":"50"},{"size":374,"mtime":1683465347905,"results":"60","hashOfConfig":"50"},{"size":131,"mtime":1683465347875,"results":"61","hashOfConfig":"50"},{"size":3309,"mtime":1683469103205,"results":"62","hashOfConfig":"50"},{"size":4689,"mtime":1683468923230,"results":"63","hashOfConfig":"50"},{"size":4537,"mtime":1683465347875,"results":"64","hashOfConfig":"50"},{"size":6771,"mtime":1683467505507,"results":"65","hashOfConfig":"50"},{"size":6770,"mtime":1683469368824,"results":"66","hashOfConfig":"50"},{"size":2460,"mtime":1683467974513,"results":"67","hashOfConfig":"50"},{"size":7927,"mtime":1683465347875,"results":"68","hashOfConfig":"50"},{"size":3370,"mtime":1683465347898,"results":"69","hashOfConfig":"50"},{"size":8637,"mtime":1683468110606,"results":"70","hashOfConfig":"50"},{"size":3227,"mtime":1683468320964,"results":"71","hashOfConfig":"50"},{"size":4498,"mtime":1683465347909,"results":"72","hashOfConfig":"50"},{"size":7614,"mtime":1683465347902,"results":"73","hashOfConfig":"50"},{"size":4375,"mtime":1683469483521,"results":"74","hashOfConfig":"50"},{"size":3634,"mtime":1683465347906,"results":"75","hashOfConfig":"50"},{"size":3511,"mtime":1683465347903,"results":"76","hashOfConfig":"50"},{"size":10247,"mtime":1683465347897,"results":"77","hashOfConfig":"50"},{"size":4631,"mtime":1683465347905,"results":"78","hashOfConfig":"50"},{"size":319,"mtime":1683465347872,"results":"79","hashOfConfig":"50"},{"size":5943,"mtime":1683465347875,"results":"80","hashOfConfig":"50"},{"size":2298,"mtime":1683465347877,"results":"81","hashOfConfig":"50"},{"size":177,"mtime":1683465347872,"results":"82","hashOfConfig":"50"},{"size":834,"mtime":1683465347876,"results":"83","hashOfConfig":"50"},{"size":898,"mtime":1683465347872,"results":"84","hashOfConfig":"50"},{"size":2231,"mtime":1683467897481,"results":"85","hashOfConfig":"50"},{"size":222,"mtime":1683465347881,"results":"86","hashOfConfig":"50"},{"size":1208,"mtime":1683465347881,"results":"87","hashOfConfig":"50"},{"size":1358,"mtime":1683465347882,"results":"88","hashOfConfig":"50"},{"size":1508,"mtime":1683465347882,"results":"89","hashOfConfig":"50"},{"size":1250,"mtime":1683465347870,"results":"90","hashOfConfig":"50"},{"size":5446,"mtime":1683465347870,"results":"91","hashOfConfig":"50"},{"size":6933,"mtime":1683465347871,"results":"92","hashOfConfig":"50"},{"size":6990,"mtime":1683465347871,"results":"93","hashOfConfig":"50"},{"size":1004,"mtime":1683465347875,"results":"94","hashOfConfig":"50"},{"size":599,"mtime":1683465347876,"results":"95","hashOfConfig":"50"},{"size":215,"mtime":1683465347877,"results":"96","hashOfConfig":"50"},{"size":2375,"mtime":1683467781355,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1toxrrs",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"100"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\index.js",[],["219","220"],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\store.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\App.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Scrollintoview.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Home.js",["221","222","223"],"import React,{useState,useEffect} from 'react'\r\nimport Slider from '../components/Slider'\r\nimport Cardscg from '../components/Cardscg'\r\nimport CgDiv from '../components/CgDiv'\r\nimport ProductsC from '../components/ProductsC'\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n \r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>CUCLOTHING</title>\r\n        </Helmet>\r\n             <div>\r\n                <Slider/>\r\n                 <div className=\"cards\">\r\n                         <Cardscg title='Women'/>\r\n                         <Cardscg title='Men'/>\r\n                         <Cardscg title='Accessoires'/>                \r\n                 </div>\r\n                <CgDiv/>\r\n                <ProductsC/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Shop.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Notfoundpage.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Contactus\\Contactus.js",["224"],"import React, { useState } from 'react'\r\nimport { Image } from \"@chakra-ui/react\"\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport cover from './cover.jpg'\r\nimport { Input,InputGroup, InputLeftElement, Textarea,Button  } from \"@chakra-ui/react\"\r\nimport {BsEnvelope, GiPositionMarker, HiOutlinePhone} from 'react-icons/all'\r\nimport './contactuscss.css'\r\nconst Contactus = () => {\r\n    const [email, setemail] = useState('')\r\n    const [body, setbody] = useState('')\r\n\r\n    const handlesubmit = () =>{\r\n        window.open(`mailto:abdessamadbouthjoul@gmail.com?subject=Sample&body=${body}`)\r\n    }\r\n    return (\r\n\r\n        <div className=\"contactUs\">\r\n            <Helmet>\r\n                <title>Contact</title>\r\n            </Helmet>\r\n        <div className=\"headerContact\">\r\n            <Image className=\"imageContact\" src='https://i.imgur.com/7rwaigw.jpg' alt=\"contactImage\" objectFit=\"cover\"/>\r\n            <div className=\"text\">\r\n                <h2>Contact</h2>  \r\n            </div>\r\n              \r\n        </div>\r\n\r\n        <div className=\"card-contact\">\r\n            <div className=\"sendMsg\">\r\n                <h4>Send Us A Message</h4>\r\n                    <div className=\"inputContact\">\r\n                        <InputGroup width=\"450px\" >\r\n                            <InputLeftElement       pointerEvents=\"none\"  children={<BsEnvelope className = 'envolope' color=\"gray.300\" />}/>\r\n                            <Input value = {email} onChange = {e=> setemail(e.target.value)} type=\"text\" placeholder=\"Your Email Address\"/>\r\n                        </InputGroup>\r\n                        \r\n                    </div>\r\n                    <div className=\"textAreaCnt\">\r\n                        <Textarea value = {body} onChange = {e=> setbody(e.target.value)} width=\"450px\"  placeholder=\"How Can We Help\" height=\"200px\" />\r\n                    </div>\r\n                    <div className=\"contentContact\">\r\n                        <Button onClick = {handlesubmit} borderRadius=\"90px\" colorScheme=\"teal\" variant=\"solid\" size=\"180px\" className=\"contactBtn\">Submit</Button>\r\n                    </div>\r\n\r\n            </div>\r\n            <div className=\"showAdrss\">\r\n                <div className=\"box\">\r\n                    <div className=\"iconCtn\"><GiPositionMarker opacity=\"0.8\"/></div>\r\n                    <div className=\"adressCtn\">\r\n\r\n                        <h3> Address</h3>\r\n                        <p>CHANDIGARH UNIVERSITY, NH-05, Ludhiana - Chandigarh State Hwy, Punjab 140413</p>\r\n                    </div>\r\n                </div>\r\n                    <div className=\"box\">\r\n                    <div className=\"iconCtn\"><HiOutlinePhone opacity=\"0.8\"/></div>\r\n                    <div className=\"adressCtn\">\r\n\r\n                        <h3>Lets Talk</h3>\r\n                        <p className=\"infoCtn\">0657964665</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box\">\r\n                    <div className=\"iconCtn\"><BsEnvelope opacity=\"0.8\"/></div>\r\n                    <div className=\"adressCtn\">\r\n\r\n                        <h3>Sale Support</h3>\r\n                        <p className=\"infoCtn\">Store@gmail.com</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Contactus\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\About\\About.js",["225","226"],"import React,{useRef,useEffect, useState} from 'react'\r\nimport { Helmet } from 'react-helmet';\r\nimport {Image} from '@chakra-ui/react'\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport './aboutcss.css'\r\nconst About = () => {\r\n    const Line = useRef(null);\r\n    const text = useRef(null);\r\n    useEffect(() => {\r\n                setTimeout(() =>{\r\n        Line.current.classList.add('lineon')\r\n        text.current.classList.add('titleon');\r\n        },5)\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    },[])\r\n    return (\r\n        \r\n\r\n        \r\n        <>\r\n        <Helmet>\r\n            <title>About</title>\r\n        </Helmet>\r\n\r\n\r\n            <div className='headingA'>\r\n                <div className = 'line' ref={Line}>\r\n                </div>\r\n                <h1 className ='title' ref={text}>About Us</h1>\r\n            </div>\r\n            <div className='Content1'>\r\n                <div className = 'text'>\r\n                    <h1>\r\n                        Why?\r\n                    </h1>\r\n                <h2>Product Descriptions:</h2>\r\n                <p>Our team takes pride in creating detailed and accurate product descriptions for all of our products. We understand that customers want to know exactly what they're buying, which is why we make sure to highlight all the key features and benefits of our products. Additionally, we include high-quality photos that showcase our products from all angles to give our customers the best possible view.</p>\r\n\r\n<h2>Customer Reviews:</h2>\r\n<p>We value our customers' opinions and encourage them to leave honest reviews about their experiences with our products and services. Positive reviews not only help build trust and credibility for our business, but they also serve as a testament to the quality of our products. We welcome all feedback, whether it's positive or negative, as we believe it can help us improve and grow as a business.</p>\r\n\r\n<h2>How-to Guides:</h2>\r\n<p>We understand that some of our products may require some explanation on how to use them properly. That's why we've created helpful how-to guides and tutorials to assist our customers. Our goal is to make sure our customers are satisfied with their purchases and know how to get the most out of our products.</p>\r\n                </div>\r\n               \r\n                   <div className ='imagecontainer'>\r\n                    <div className = 'Imageabt'>\r\n                    <Image className='mImage' boxSize = '400px' objectFit=\"cover\" src='https://images.unsplash.com/photo-1614771637369-ed94441a651a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' alt=\"Segun Adebayo\"/>\r\n                    </div>\r\n                   </div>\r\n            </div>\r\n            <div className ='Content2'>\r\n                   \r\n                   <div className ='imagecontainer'>\r\n                    <div className = 'Imageabt'>\r\n                    <Image className='mImage' boxSize = '400px' objectFit=\"cover\" src='https://images.unsplash.com/photo-1614038276039-667c23bc32fa?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=389&q=80' alt=\"Segun Adebayo\"/>\r\n                    </div>\r\n                   </div>\r\n                   <div className = 'text'>\r\n                    <h1>\r\n                        How?\r\n                    </h1>\r\n                <p>At CUCLOTHING, we are dedicated to providing our customers with high-quality products and exceptional service. Our team is passionate about what we do, and we strive to exceed our customers' expectations in every way possible.</p>\r\n\r\n<p>We understand that shopping for the perfect product can be overwhelming at times, which is why we've made it our mission to make the process as easy and enjoyable as possible. From detailed product descriptions to helpful how-to guides, we're here to assist you every step of the way.</p>\r\n\r\n<p>We take great pride in the quality of our products and stand behind them 100%. We believe in using only the finest materials and craftsmanship to create products that are not only beautiful, but also functional and long-lasting. Whether you're in need of a gift for a loved one or something special for yourself, we've got you covered.</p>\r\n\r\n<p>We believe in building strong relationships with our customers, and we're committed to providing exceptional customer service every time. If you have any questions or concerns, our friendly and knowledgeable team is always here to assist you.</p>\r\n\r\n<p>Thank you for choosing CUCLOTHING, and we look forward to serving you!</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\RegisterScreen.js",["227","228","229","230","231"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Image} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport avatarRegister from './img/avatarRegister.svg'\r\nimport login from '../actions/userActions'\r\nimport { Helmet } from 'react-helmet';\r\nimport addUs from './img/new.svg'\r\nimport wave from './img/wavev.png'\r\nimport {register} from '../actions/userActions'\r\n\r\n\r\nimport {\r\n  Button, Input\r\n} from \"@chakra-ui/react\"\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name,setName] = useState('')\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  const [confirmPassword,setConfirmPassword] = useState('')\r\n  const [message,setMessage] = useState(null) \r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector(state => state.userRegister)\r\n\r\n  const { error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if(userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(password !== confirmPassword){\r\n        setMessage('Password do not match')\r\n    }\r\n    else{\r\n        dispatch(register(name, email, password))\r\n    }\r\n    \r\n  }\r\n\r\n  const inputs = document.querySelectorAll(\".inputa\");\r\n\r\n\r\n  function addcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    parent.classList.add(\"focus\");\r\n  }\r\n  \r\n  function remcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    if(this.value == \"\"){\r\n      parent.classList.remove(\"focus\");\r\n    }\r\n  }\r\n  \r\n  \r\n  inputs.forEach(inputa => {\r\n    inputa.addEventListener(\"focus\", addcl);\r\n    inputa.addEventListener(\"blur\", remcl);\r\n  });\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"registerSc\">\r\n          <Helmet>\r\n            <title>\r\n              Register\r\n            </title>\r\n          </Helmet>\r\n          \t<Image className=\"wave\" src={wave} />\r\n\r\n            <div className=\"containera\">\r\n              \r\n\t\t<div className=\"imga\">\r\n\t\t\t<Image src={addUs} />\r\n\t\t</div>\r\n\t\t<div className=\"login-content\">\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<Image src={avatarRegister} />\r\n\t\t\t\t{error && <h4>{error}</h4>}\r\n                \r\n\r\n\r\n\r\n                <div className=\"input-div zz\">\r\n                       <div className=\"i\">\r\n           \t\t   \t\t<i className=\"fas fa-user\"></i>\r\n           \t\t   </div>\r\n                   <div className=\"div\">\r\n           \t\t   \t\t\r\n           \t\t   \t\t<input type=\"text\" value={name} className=\"inputa\" placeholder=\"Enter name\"  onChange={(e) => setName(e.target.value)}/>\r\n           \t\t   </div>\r\n\r\n           \t\t   \r\n           \t\t</div>\r\n\r\n\r\n\r\n\r\n           \t\t<div className=\"input-div one\">\r\n                       \r\n\r\n           \t\t   <div className=\"i\">\r\n           \t\t   \t\t<i className=\"fas fa-envelope\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t   \t\t\r\n           \t\t   \t\t<input type=\"text\" value={email} className=\"inputa\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)} />\r\n           \t\t   </div>\r\n           \t\t</div>\r\n\r\n\r\n\r\n                \r\n\r\n           \t\t<div className=\"input-div pass\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t\r\n           \t\t    \t<input type=\"password\" value={password} className=\"inputa\" placeholder=\"Enter password\" onChange={(e) => setPassword(e.target.value)}/>\r\n            \t   </div>\r\n            \t</div>\r\n\r\n\r\n                <div className=\"input-div passconf\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t\r\n           \t\t    \t<input type=\"password\" value={confirmPassword} className=\"inputa\" placeholder=\"Confirm password\" onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            \t   </div>\r\n            \t</div>\r\n                {message && <h4>{message}</h4>}\r\n                <input type=\"submit\" className=\"btna2\" value=\"Sign up\"/>\r\n                <br />\r\n                Have an Account? {' '}\r\n            \t<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n            \t\r\n                \r\n              \r\n            </form>\r\n        </div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Nav.js",["232","233","234","235","236","237","238","239"],"import React , {useRef,useState,useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Route } from 'react-router-dom';\r\nimport {Link, NavLink } from 'react-router-dom'\r\nimport { Button, Input,InputGroup,InputRightElement, Menu, MenuButton, MenuItem, MenuList} from \"@chakra-ui/react\"\r\nimport {RiShoppingCart2Line,IoCloseOutline,MdSearch,BsArrowRightShort,MdKeyboardArrowRight,IoLogOutOutline,CgProfile, IoChevronDownCircleOutline, IoMdArrowDropdown} from \"react-icons/all\"\r\n\r\nimport {logout} from '../actions/userActions'\r\nimport { keyword } from 'color-convert'\r\nimport Searchnav from './Searchnav';\r\n\r\n const Nav = ({history}) => {\r\n    const [incart,setincart] = useState(0);\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    const[nav,setNav]=useState(false)\r\n    const Nav = useRef(null)\r\n\r\n\r\n     //search\r\n     const searchRef = useRef(null)\r\n     const [showSearchIc,setShowSearchIc] = useState(false)\r\n     //Burger\r\n     const Buric = useRef(null)\r\n     const navLinks = useRef(null)\r\n     const rightItems = useRef(null)\r\n     //signin\r\n     const [signin,setSignin] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n     const onSeacrhFun= () =>\r\n        {\r\n\r\n                //Search Icon state + Bar\r\n            setShowSearchIc(!showSearchIc) //false\r\n            console.log(showSearchIc)\r\n            searchRef.current.classList.toggle('searchActive')\r\n            searchRef.current.style.animation = 'moving 0.3s ease both 0.3s'\r\n        }  \r\n        const onDelSeacrh =  () =>{\r\n            \r\n            setShowSearchIc(!showSearchIc) //true\r\n            searchRef.current.classList.toggle('searchActive')\r\n\r\n        }\r\n\r\n        const onBurgActive = () =>{\r\n            //Toggle Nav\r\n\r\n            const links = document.querySelectorAll('.navLinks li')\r\n            navLinks.current.classList.toggle('burgerActive')\r\n            rightItems.current.classList.toggle('burgerActive')\r\n            //Animate Links\r\n            links.forEach((link,index) => {\r\n             if(link.style.animation)\r\n                  {\r\n                        link.style.animation = \"\";\r\n                        rightItems.current.style.animation = \"\";\r\n                   }\r\n                else \r\n                { \r\n                       \r\n                        link.style.animation = `moving 0.5s ease forwards ${index / 5 }s`\r\n                        rightItems.current.style.animation = `moving 0.5s ease forwards ${index / 5 }s`\r\n                       \r\n                    }\r\n            });\r\n            //Burger Animation\r\n            Buric.current.classList.toggle('toggle')\r\n        }\r\n        const onChangeBack= () =>{\r\n            if(window.scrollY >= 60){\r\n               setNav(true)\r\n            }\r\n            else  setNav(false)\r\n        }\r\n        window.addEventListener('scroll',onChangeBack)\r\n\r\n        useEffect(() => {\r\n            const cart = cartItems.length ? cartItems.length : 0 ;\r\n            setincart(cart);\r\n            return () => {\r\n                setincart(0)\r\n            }\r\n        },[cart])\r\n\r\n\r\n        const dispatch= useDispatch()\r\n        const userLogin = useSelector(state => state.userLogin)\r\n        const {userInfo} = userLogin\r\n        \r\n        const logoutHandler = () => {\r\n            dispatch(logout())\r\n        }\r\n    \r\n    return (\r\n       <nav ref = {Nav}  className={`nav ${nav ? 'active' : ''}`} >\r\n           <div className=\"logo\"><Link to =''>CUCLOTHING</Link></div>\r\n            <ul className=\"navLinks\" ref= {navLinks}>\r\n                <NavLink to=\"/\" exact  activeClassName='activlink' ><li>Home</li></NavLink>\r\n                <NavLink to=\"/shop\" activeClassName='activlink' ><li>Shop</li></NavLink>\r\n                <NavLink to=\"/contactus\"activeClassName='activlink' ><li>Contact us</li></NavLink>\r\n                <NavLink to=\"/about\" activeClassName='activlink'><li>About</li></NavLink>  \r\n            </ul>\r\n            <div className=\"burger\" ref= {Buric} onClick = {onBurgActive}>\r\n                <div className='line1'></div>\r\n                <div className='line2'></div>\r\n                <div className='line3'></div>\r\n            </div>\r\n        <div className = \"rightComp\" ref = {rightItems}>\r\n        <div  ref={searchRef} className=\"search\">\r\n        <Route render={({history}) => <Searchnav history ={history}/>}/>\r\n\r\n        </div>\r\n\r\n\r\n                { !showSearchIc && <MdSearch className='iconSearch' size='26' onClick={onSeacrhFun}/>  }\r\n                <Link to='/cart' > <RiShoppingCart2Line className='iconCart' size='26' />\r\n                {userInfo && !userInfo.isAdmin && \r\n                <div className='dotcart'>\r\n                    {incart}\r\n                </div>\r\n                }\r\n\r\n                 </Link>\r\n\r\n                            {userInfo ? (<div className=\"ic_sett_dis\"><Link to=\"/profile\"><CgProfile size=\"25\" className=\"settingIcon\"/></Link>\r\n                                <IoLogOutOutline size='28' className=\"displayIcon\" onClick={logoutHandler}/>\r\n                                </div>\r\n                                \r\n                            ) : <Link to='/login' > <div className='signin' onMouseOver={ () => setSignin(!signin)}  onMouseOut={ ()=> setSignin(!signin) }  > Sign in \r\n                            { !signin ? <BsArrowRightShort  size='25'/>  : <MdKeyboardArrowRight size='25'  /> }\r\n\r\n                        </div>\r\n                        </Link>}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <Menu>\r\n                                  <MenuButton as = {Button}  rightIcon={<IoMdArrowDropdown />}>\r\n                                      Admin\r\n                                  </MenuButton>\r\n                                  <MenuList>\r\n                                  <MenuItem>\r\n                                  <Link to = '/admin/userlist'>\r\n                                        Users\r\n                                     </Link>\r\n                                  </MenuItem>\r\n                                  <MenuItem>\r\n                                  <Link to = '/admin/productlist'>\r\n                                        Products\r\n                                  </Link>\r\n                                  </MenuItem>\r\n                                  <MenuItem>\r\n                                  <Link to = '/admin/orderlist'>\r\n                                        Orders\r\n                                  </Link>\r\n                                  </MenuItem>\r\n                                  </MenuList>\r\n\r\n                            </Menu>\r\n                        )}\r\n            \r\n        </div>\r\n       </nav>\r\n    )                   \r\n}\r\nexport default Nav                      ","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\checkout\\Checkout.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Cart\\Cartpage.js",["240"],"import React from 'react'\r\nimport { useEffect,useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { addToCart } from '../../actions/cartActions';\r\nimport Empty from '../../components/Empty';\r\nimport Productoncart from '../../components/Productoncart';\r\nimport './cartcss.css'\r\nconst Cartpage = ({match,location,history}) => {\r\n    const {id} = match.params;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(()=>{\r\n\r\n        if(id){\r\n            dispatch(addToCart(id,qty))}\r\n    },[dispatch,id,qty])\r\n\r\n    const checkoutHandler =()=>{\r\n        history.push('./login?redirect=shipping');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>Cart</title>\r\n        </Helmet>\r\n        {cartItems.length === 0 ? \r\n        <Empty />\r\n        :\r\n        <div className ='cartfull'>\r\n        <div className = 'cart'>\r\n            <h1>Your Cart : {cartItems.length}</h1>\r\n            <div className ='productsoncart'>\r\n            {cartItems.map(product =>(\r\n                    <Productoncart product = {product} />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n        <div className = 'totalcart'>\r\n            <h3>\r\n            Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty,0)} items) :\r\n\r\n            </h3>\r\n            <h3 className = 'totalprice'>\r\n            ₹{cartItems.reduce((acc,item )=>\r\n                acc + item.qty * item.price,0\r\n\r\n             ).toFixed(2)}\r\n            </h3>\r\n            <h3>\r\n            Delivery :\r\n\r\n            </h3>\r\n            <h3 className = 'totalprice'>\r\n            For free.\r\n\r\n            </h3>\r\n            <h3>\r\n            Taxes :\r\n\r\n            </h3>\r\n            <h3 className = 'totalprice'>\r\n            -- --.\r\n\r\n            </h3>\r\n            <h3>\r\n            Total :\r\n\r\n            </h3>\r\n            <h3 className = 'totalprice'>\r\n            ₹{cartItems.reduce((acc,item )=>\r\n                acc + item.qty * item.price,0\r\n\r\n             ).toFixed(2)}\r\n            </h3>\r\n            <button className = 'checkoutbtn' disabled={cartItems.length===0} onClick={checkoutHandler}>\r\n            CHECKOUT\r\n            </button>\r\n        </div>\r\n\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cartpage\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ProfileScreen.js",["241","242","243","244","245","246"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Image} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport avatarRegister from './img/avatarRegister.svg'\r\nimport addUs from './img/new.svg'\r\nimport wave from './img/wavev.png'\r\nimport { Helmet } from 'react-helmet';\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport {listMyOrders } from '../actions/orderActions'\r\nimport { IoIosArrowDown } from 'react-icons/all';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n\r\n\r\nimport {\r\n  Button, Input, Table,  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\"\r\nimport { AiOutlineEdit } from 'react-icons/ai'\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n  const [name,setName] = useState('')\r\n  const [ShowOrders,setShowOrders] = useState(false)\r\n\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  const [confirmPassword,setConfirmPassword] = useState('')\r\n  const [message,setMessage] = useState(null) \r\n  const [isEditablename,setisEditablename] = useState(false) \r\n  const [isEditableemail,setisEditableemail] = useState(false) \r\n\r\n  const nameinput = useRef(null)\r\n  const emailinput = useRef(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n\r\n  const { error, user } = userDetails\r\n\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n\r\n  const {userInfo } = userLogin\r\n\r\n\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n\r\n  const {success } = userUpdateProfile\r\n\r\n  const orderMylist = useSelector(state => state.orderMylist)\r\n\r\n  const { loading:loadingOrders,error:errorOrders,orders } = orderMylist\r\n\r\n  useEffect(() => {\r\n    if(!userInfo) {\r\n      history.push('/login')\r\n    }else{\r\n        if(!user.name)\r\n        {\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(password !== confirmPassword){\r\n        setMessage('Password do not match')\r\n    }\r\n    else{\r\n        dispatch(updateUserProfile({ id:user._id, name, email, password }))\r\n    }\r\n    \r\n  }\r\n  const inputs = document.querySelectorAll(\".inputa\");\r\n\r\n\r\n  function addcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    parent.classList.add(\"focus\");\r\n  }\r\n  \r\n  function remcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    if(this.value == \"\"){\r\n      parent.classList.remove(\"focus\");\r\n    }\r\n  }\r\n  \r\n  const nameinputfocus = () =>{\r\n    setisEditablename(!isEditablename)\r\n    if(isEditablename){\r\n      nameinput.current.focus()        \r\n    }else{\r\n\r\n    }\r\n  }\r\n  \r\n  inputs.forEach(inputa => {\r\n    inputa.addEventListener(\"focus\", addcl);\r\n    inputa.addEventListener(\"blur\", remcl);\r\n  });\r\n  const handelshow = ()=>{\r\n\r\n  }\r\n\r\n\r\n\r\n    return (\r\n    <div className=\"registerSc\">\r\n      <Helmet>\r\n        <title>Profile</title>\r\n      </Helmet>\r\n      <Image className=\"wave\" src={wave}/>\r\n      <div className=\"containera\">\r\n              \r\n\t\t<div className=\"imga\">\r\n\t\t\t<Image src={addUs} />\r\n\t\t</div>\r\n    <div className = 'rightinfos'>\r\n    <div className = 'showbtn' onClick = {()=>setShowOrders(!ShowOrders)}>{ShowOrders ? 'Show my infos' :'Show my orders'} <IoIosArrowDown /></div>\r\n    <>\r\n    {!ShowOrders ? \r\n\t\t<div className= 'login-content'>\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<Image src={avatarRegister} />\r\n\t\t\t\t{error && <h4>{error}</h4>}\r\n                {success && <h4>Profile Updated</h4>}\r\n                \r\n\r\n\r\n\r\n                <div className=\"input-div zz\">\r\n                       <div className=\"i\">\r\n           \t\t   \t\t<i className=\"fas fa-user\"></i>\r\n           \t\t   </div>\r\n                   <div className=\"div\">\r\n           \t\t   \t\t\r\n           \t\t   \t\t<input type=\"text\" value={name} readOnly = {isEditablename} ref = {nameinput} className=\"inputa\" placeholder=\"Enter name\"  onChange={(e) => setName(e.target.value)}/>\r\n           \t\t   </div>\r\n\r\n           \t\t   \r\n           \t\t</div>\r\n               <AiOutlineEdit size ='26' className = 'edit' onClick = {nameinputfocus}/>\r\n\r\n\r\n\r\n           \t\t<div className=\"input-div one\">\r\n                       \r\n\r\n           \t\t   <div className=\"i\">\r\n           \t\t   \t\t<i className=\"fas fa-envelope\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t   \t\t\r\n           \t\t   \t\t<input type=\"text\" value={email} readOnly = {isEditableemail} ref = {emailinput} className=\"inputa\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)} />\r\n           \t\t   </div>\r\n                  \r\n           \t\t</div>\r\n               <AiOutlineEdit size ='26' className = 'edit' onClick = {()=>{setisEditableemail(!isEditableemail)\r\n              emailinput.current.focus()\r\n              }}/>\r\n\r\n\r\n\r\n                \r\n\r\n           \t\t<div className=\"input-div pass\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t\r\n           \t\t    \t<input type=\"password\" value={password} required className=\"inputa\" placeholder=\"Enter password\" onChange={(e) => setPassword(e.target.value)}/>\r\n            \t   </div>\r\n            \t</div>\r\n\r\n\r\n                <div className=\"input-div passconf\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t\r\n           \t\t    \t<input type=\"password\" value={confirmPassword} className=\"inputa\" placeholder=\"Confirm password\" onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            \t   </div>\r\n            \t</div>\r\n                {message && <h4 className = 'Message'>{message}</h4>}\r\n                <input type=\"submit\" className=\"btna2\" value=\"Update\"/>\r\n               \r\n            \t\r\n                \r\n              \r\n            </form>\r\n        </div>\r\n         :\r\n         <div className = 'tableorder'>\r\n           {loadingOrders ? <div className='loading'>\r\n                          <HashLoader   color={\"#fff\"}  loading={loadingOrders} size={40} />\r\n                     </div>  : errorOrders ? <h1>{errorOrders}</h1>\r\n                     :\r\n                     <Table size=\"sm\">\r\n                       <Thead>\r\n                        <Tr>\r\n                            <Th>ID</Th>\r\n                            <Th>DATE</Th>\r\n                            <Th>TOTAL</Th>\r\n                            <Th>PAID</Th>\r\n                            <Th>DELIVERED</Th>\r\n                            <Th></Th>\r\n                        </Tr>\r\n                      </Thead>\r\n                      <Tbody>\r\n                        {orders.map(order=>(    \r\n                        <Tr key = {order._id}>\r\n                          <Td>{order._id}</Td>\r\n                          <Td>{order.createdAt.substring(0,10)}</Td>\r\n                          <Td>{order.totalPrice}</Td>\r\n                          <Td>{order.isPaid ? order.paidAt.substring(0,10) : 'Not Paid Yet'}</Td>\r\n                          <Td>{order.isDelivered ? order.deliveredAt.substring(0,10) : 'Not Yet'}</Td>\r\n                          <Td>\r\n                            <Link to ={ `/order/${order._id}`}>\r\n                            <Button size=\"xs\">DETAILS</Button>\r\n                            </Link>\r\n                          </Td>\r\n                        </Tr>\r\n                        ))}\r\n                      </Tbody>\r\n                     </Table>\r\n                     }\r\n         </div>\r\n         }\r\n        </>\r\n      </div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Login\\LoginScreen.js",["247","248","249"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {Form, Image} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {BsArrowRight} from \"react-icons/all\"\r\nimport avatar from './img/avatare.svg'\r\nimport login from '../../actions/userActions'\r\nimport login_svg from './img/login.svg'\r\nimport wave from './img/wavev.png'\r\nimport './logincss.css'\r\n\r\n\r\n\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n   \r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n\r\n  const { error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if(userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  const inputs = document.querySelectorAll(\".inputa\");\r\n\r\n\r\n  function addcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    parent.classList.add(\"focus\");\r\n  }\r\n  \r\n  function remcl(){\r\n    let parent = this.parentNode.parentNode;\r\n    if(this.value == \"\"){\r\n      parent.classList.remove(\"focus\");\r\n    }\r\n  }\r\n  \r\n  \r\n  inputs.forEach(inputa => {\r\n    inputa.addEventListener(\"focus\", addcl);\r\n    inputa.addEventListener(\"blur\", remcl);\r\n  });\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n          <Helmet>\r\n            <title>Login</title>\r\n\r\n          </Helmet>\r\n          \t<Image className=\"wave\" src={wave} />\r\n\r\n            <div className=\"containera\">\r\n              \r\n\t\t<div className=\"imga\">\r\n\t\t\t<Image src={login_svg} />\r\n\t\t</div>\r\n\t\t<div className=\"login-content\">\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<h1>Member Login</h1>\r\n\t\t\t\t{error && <h4>{error}</h4>}\r\n           \t\t<div className=\"input-div one\">\r\n           \t\t   <div className=\"i\">\r\n                     <i class=\"fas fa-envelope\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t   \t\t\r\n           \t\t   \t\t<input type=\"text\" value={email} className=\"inputa\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n           \t\t   </div>\r\n           \t\t</div>\r\n           \t\t<div className=\"input-div pass\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t\r\n           \t\t    \t<input type=\"password\" value={password} className=\"inputa\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\r\n            \t   </div>\r\n            \t</div>\r\n            \t\r\n            \t<input type=\"submit\" className=\"btna\" value=\"Login\" />\r\n               \r\n              <div className='div-forgot'>\r\n                              <span>Forgot </span>\r\n                         <Link className ='text-forgot'  to ='/forgot'>Password? </Link>\r\n                         \r\n                         </div>\r\n              <Link className=\"createAcc\" to={redirect ? `/register?redirect=${redirect}` : '/register'}>Create your Account <BsArrowRight size=\"25\"/></Link>\r\n             \r\n            </form>\r\n        </div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Product\\Productpage.js",["250","251","252","253"],"import React, {useEffect,useState,useRef} from 'react'\r\nimport Rating from '../../components/Rating'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {listProductDetails,createproductReview} from '../../actions/productActions'\r\nimport {IoLogoFacebook,AiFillTwitterCircle,AiFillInstagram,AiFillShop,MdDoNotDisturb}  from \"react-icons/all\"\r\nimport { Image,Select,Button, FormControl, FormLabel, Textarea } from \"@chakra-ui/react\"\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport {PRODUCT_CREATE_RESET, PRODUCT_CREATE_REVIEW_RESET} from '../../constants/productConstants'\r\nimport  './product.css'\r\nimport { Link } from 'react-router-dom'\r\nconst Productpage = ({history,match}) => {\r\n   const [qty, setQty] = useState(1)\r\n   const [rating, setrating] = useState(0)\r\n   const [comment,setcomment] = useState('')\r\n\r\n   const imgs = document.querySelectorAll('.img-select a');\r\n   const imgShowcase = useRef(null);\r\n   const imgBtns = [...imgs];\r\n   let imgId = 1;\r\n   const dispatch = useDispatch()\r\n   const productDetails = useSelector(state => state.productDetails)\r\n   const {loading,error,product} = productDetails\r\n   const userLogin = useSelector(state => state.userLogin)\r\n   const {userInfo} = userLogin\r\n   const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n   const {success:successProductReview,error:errorProductReview,} = productReviewCreate\r\n\r\n\r\n imgBtns.forEach((imgItem) => {\r\n    imgItem.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        imgId = imgItem.dataset.id;\r\n        slideImage();\r\n    });\r\n});\r\n\r\n\r\n\r\nfunction slideImage(){\r\n  const displayWidth = document.querySelector('.img-showcase img:first-child').clientWidth;\r\n    imgShowcase.current.style.transform = `translateX(${- (imgId - 1) * displayWidth}px)`;\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n  if(successProductReview){\r\n    alert('Review Submitted!')\r\n    setrating(0)\r\n    setcomment('')\r\n    dispatch({type : PRODUCT_CREATE_REVIEW_RESET})\r\n\r\n  }\r\n  dispatch(listProductDetails(match.params.id))\r\n\r\n}\r\n,[dispatch,match,successProductReview])\r\n\r\nconst submithanlder = () =>{\r\n  dispatch(createproductReview(match.params.id,\r\n    {\r\n      rating,\r\n      comment\r\n\r\n    }\r\n  ))\r\n}\r\n  //Handler of button add to cart\r\n  const addToCartHandler = () =>{\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n    return (\r\n      <>\r\n      <Helmet>\r\n      <title>{product.name}</title>\r\n      </Helmet>\r\n        <div className = 'productpage'>\r\n          {loading ?  <div className='loading-product'>\r\n                          <HashLoader   color={\"#1e1e2c\"}  loading={loading} size={50} />\r\n                     </div>  : error ?  <h2>{error} </h2>  : \r\n\r\n     <div className = \"card-wrapper\">\r\n      <div className = \"card\">\r\n        <div className = \"product-imgs\">\r\n        <div className = \"img-display\">\r\n            <div ref={imgShowcase}  className = \"img-showcase\">\r\n              {product.images.map(i => (\r\n              <Image src= {i} />  \r\n              ))}\r\n\r\n\r\n              \r\n\r\n             \r\n            </div>\r\n          </div>\r\n          <div className = \"img-select\">\r\n            <div className = \"img-item\">\r\n              <a href = \"#\" data-id = \"1\">\r\n                <Image  objectFit=\"cover\" boxSize = '200px' src = {product.images[0]} alt = \"shoe image\"/>\r\n\r\n\r\n              </a>\r\n            </div>\r\n            <div className = \"img-item\">\r\n              <a href = \"#\" data-id = \"2\">\r\n                <Image  objectFit=\"cover\" boxSize = '200px' src = {product.images[1]} alt = \"shoe image\"/>\r\n\r\n              </a>\r\n            </div>\r\n            <div className = \"img-item\">\r\n              <a href = \"#\" data-id = \"3\">\r\n                <Image  objectFit=\"cover\"  boxSize = '200px' src = {product.images[2]} alt = \"shoe image\"/>\r\n\r\n\r\n              </a>\r\n            </div>\r\n        \r\n          </div>\r\n        </div>\r\n \r\n        <div className = \"product-content\">\r\n          <h2 className = \"product-title\">{product.name} </h2>\r\n          <Link to = '/shop' className = \"product-link\">visit our store</Link>\r\n              <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              />\r\n          <div className = \"product-price\">\r\n            <p className = \"last-price\">Old Price: <span>₹{product.price + product.price * 0.5}</span></p>\r\n            <p className = \"new-price\">New Price: <span>₹{product.price} (5%)</span></p>\r\n          </div>\r\n          \r\n          <div className = \"product-detail\">\r\n            <h2>about this item: </h2>\r\n            <p>{product.description}</p>\r\n           <div>\r\n           <ul>\r\n             <li>Size</li> <Select  className='select-product' placeholder=\"Choose an option\">\r\n               {product.sizes.map(size =>(\r\n                                    <option value={size}>{size}</option>\r\n\r\n               ))}\r\n                                </Select>\r\n           </ul>\r\n           </div>\r\n            <ul>\r\n              <li>Status: <span>{product.countInStock > 0 ? 'ìn stock' :  'Out Of Stock'}</span></li>\r\n              <li>Category: <span>{product.category.map(cg =>' | ' + cg + ' | ')}</span></li>\r\n              <li>Shipping Area: <span>All over the world</span></li>\r\n              <div>\r\n                <ul> <li>Qty :</li>\r\n             {product.countInStock > 0 ?\r\n              <Select as='select' size=\"md\" maxW={20}  value={qty} className='select-product' onChange={(e) => setQty(e.target.value)} >\r\n                {[...Array(product.countInStock).keys()].map((x) => (              \r\n                                    <option key={x+1} value={x+1}>\r\n                                      {x+1}\r\n                                    </option> ))}\r\n                                    \r\n                                </Select>\r\n              :  <span style={{display:'flex'}}><MdDoNotDisturb   size='26'/>   OUT OF STOCK  </span>\r\n              }\r\n                </ul>\r\n              </div>\r\n           \r\n   \r\n          \r\n            </ul>\r\n          </div>\r\n\r\n               <div className = \"purchase-info\">\r\n            <Button onClick={addToCartHandler} type = \"button\"  className = \"btn-shop\" disabled={product.countInStock === 0}> <AiFillShop size='24' />Add to Cart </Button>\r\n          </div>\r\n\r\n          <div className = \"social-links\">\r\n            <p>Share On: </p>\r\n            <Link className = 'social' to = \"#\">\r\n              <i> <IoLogoFacebook size='20'/></i>\r\n            </Link>\r\n            <Link className = 'social' href = \"#\">\r\n              <i><AiFillTwitterCircle size='20'/></i>\r\n            </Link>\r\n            <Link  className = 'social' href = \"#\">\r\n              <i><AiFillInstagram size='20'/> </i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    }\r\n      <div className ='REVIEWS'>\r\n        <h1>Reviews :</h1>\r\n        {product.reviews.length === 0 && <h2>NO REVIEWS</h2>}\r\n        <div>\r\n          {product.reviews.map(review =>(\r\n            <div className='review'>\r\n              <h4>{review.name}</h4>\r\n              <div className = 'Ratingreview'>\r\n              <Rating value={review.rating}/>\r\n\r\n              </div>\r\n              <p className ='commentreview'>{review.comment}</p>\r\n              <p className ='datereview'>{review.createdAt.substring(0,10)}</p>\r\n\r\n            </div>\r\n\r\n          ))}\r\n              <div className ='createreview'>\r\n              <h1>Create New Review :</h1>\r\n              {errorProductReview && <h2>{errorProductReview}</h2>}\r\n              {userInfo ? (\r\n              <FormControl>\r\n              <FormLabel>Rating :</FormLabel>\r\n              <Select onChange = {(e)=> setrating(e.target.value)} >\r\n              <option value='1'>1 POOR</option>\r\n              <option value='2'>2 FAIR</option>\r\n              <option value='3'>3 GOOD</option>\r\n              <option value='4'>4 VERY GOOD</option>\r\n              <option value='5'>5 EXCELLENT</option>\r\n              </Select>\r\n              <FormLabel>Comment :</FormLabel>\r\n              <Textarea onChange = {(e)=> setcomment(e.target.value)} placeholder = 'Leave Comment here :'/>\r\n              <Button colorScheme ='blue' onClick = {submithanlder}>Submit</Button>\r\n\r\n\r\n            </FormControl>\r\n            \r\n              ) :\r\n              <>\r\n              Please <Link to = '/login'>Sign In</Link> To write a review.\r\n              </>\r\n              \r\n              }\r\n\r\n              </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default Productpage\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Footer\\Footer.js",["254","255","256","257","258"],"import React from 'react'\r\nimport {FiFacebook, AiOutlineHeart, AiOutlineInstagram, IoLogoYoutube} from 'react-icons/all';\r\nimport { Input,Stack } from '@chakra-ui/react'\r\nimport './footercss.css'\r\nimport { Link } from 'react-router-dom';\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footerCmp\">\r\n            <footer>\r\n                <div className=\"footerCategorie\">\r\n                    <h1>Categories</h1>\r\n                    <ul>\r\n                        <li><Link to = '/shop/?cg=Women'>Women</Link></li>\r\n                        <li><Link to = '/shop/?cg=Men'>Men</Link></li>\r\n                        <li><Link to = '/shop/?cg=Shoes'>Shoes</Link></li>\r\n                        <li><Link to = '/shop/?cg=Watches'>Watches</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"fooHelp\">\r\n                    <h1>Help</h1>\r\n                    <ul>\r\n                        <li>Tracke Order</li>\r\n                        <li>Returns</li>\r\n                        <li>Shipping</li>\r\n                        <li>FAQs</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"footerGetInTouch\">\r\n                    <h1>Get in touch</h1>\r\n                    <ul>\r\n                        <p>Any questions? Let us know in store at CHANDIGARH UNIVERSITY, NH-05, Ludhiana - Chandigarh State Hwy, Punjab 140413</p>\r\n                        <li className=\"footerIcons\">\r\n                            <FiFacebook size=\"25\" />\r\n                        </li>\r\n                        <li className=\"footerIcons\">  \r\n                            <AiOutlineInstagram size=\"25\" />\r\n                        </li>\r\n                        <li className=\"footerIcons\">\r\n                            <IoLogoYoutube size=\"25\"/>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"footerNews\">\r\n                    <h1>Newsletter</h1>\r\n                    <ul>\r\n                        <li>\r\n                            <Stack spacing={3}>\r\n                            <Input variant=\"flushed\" placeholder=\"email@example.com\" size=\"10\" width=\"200px\"/>\r\n                            </Stack>\r\n                        </li>\r\n                        <li>\r\n                            <button className=\"footerBtn\">Subscribe</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"creditsIcons\">\r\n                    <ul>\r\n                        <li><img src=\"https://i.imgur.com/AHCoUZO.png\" className=\"img1\"/></li>\r\n                        <li><img src=\"https://i.imgur.com/JZRipBg.png\" className=\"img2\" /></li>\r\n                        <li><img src=\"https://i.imgur.com/l8OAGyo.png\" className=\"img3\" /></li>\r\n                        <li><img src=\"https://i.imgur.com/IDHC2iv.png\" className=\"img4\" /></li>\r\n                    </ul>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"paragraphFooter\"><p>Copyright ©2021 All rights reserved </p>\r\n                \r\n                </div>\r\n\r\n\r\n\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\products\\products.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Order\\Order.js",["259","260"],"import React, { useState,useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport {Link} from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { IoMdDoneAll } from 'react-icons/all';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { getOrderDetails, payOrder,deliverOrder } from \"../../actions/orderActions\";\r\nimport './Order.css'\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../../constants/orderConstants';\r\nimport { Button } from '@chakra-ui/button';\r\nconst Order = ({match,history}) => {\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch();\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order,loading,error} = orderDetails\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingpay,success:successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver,success:successDeliver} = orderDeliver\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const addDecimals = (num) =>{\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    if(!loading){\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        const addPaypalscript = async () =>{\r\n            const {data : clientId} = await axios.get('/api/config/paypal ') \r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.async = true\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.onload = () =>{\r\n                setsdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n\r\n        }\r\n        if(!order || successPay || successDeliver || order._id !== orderId){\r\n            dispatch({\r\n                type:ORDER_PAY_RESET\r\n            })\r\n            dispatch({\r\n                type:ORDER_DELIVER_RESET\r\n            })\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPaypalscript();\r\n            }else{\r\n                setsdkReady(true)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch,orderId,successPay,orderPay,successDeliver,userInfo])\r\n    const successpaymenthandler = (paymentResult) =>{\r\n        dispatch(payOrder(orderId,paymentResult))\r\n    }\r\n    const deliverhandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading || loadingDeliver ? <div className='loading-product'>\r\n                        <HashLoader   color={\"#1e1e2c\"}  loading={loading || loadingDeliver} size={50} />\r\n                     </div> : error ? <h1>{error}</h1> :\r\n    (\r\n        <div className=\"placeorder\">\r\n            <Helmet>\r\n                <title>ORDER</title>\r\n            </Helmet>\r\n            <div className=\"informations-placeorder\">\r\n                <div className=\"shipping-placeorder\">\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Name: </strong>\r\n                        {order.user.name}\r\n                    </p>\r\n                    <p>\r\n                    <strong> Email: </strong>\r\n                       <a href ={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Address: </strong>\r\n                        {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.cp}, {order.shippingAddress.country}\r\n                        {order.isDelivered ? <div className = 'paid'>Delivered at {order.deliveredAt}</div> : <div className = 'notpaid'>NOT Delivered YET</div>}\r\n\r\n                    </p>\r\n                </div>\r\n                      <hr className= 'hr' />\r\n                <div className=\"payment-placeorder\">\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}\r\n                        {order.isPaid ? <div className = 'paid'>PAID AT {order.paidAt}</div> : <div className = 'notpaid'>NOT PAID YET</div>}\r\n                    </p>\r\n                </div>\r\n                      <hr className= 'hr' />\r\n                <div>\r\n                    <h2>Order Items: </h2>\r\n                   {order.orderItems.length === 0 ? <p>Your order is empty</p>:\r\n                        <div className=\"orders-placeorder\">\r\n                        {order.orderItems.map((item, index) => (\r\n                                \r\n                            <p key = {index}><span className=\"color-name\"><Link to={`/product/${item.product}`}>{item.name}</Link></span> <b>{item.qty} x ${item.price} = ${item.qty * item.price}</b><hr className= 'hr' /></p>\r\n                          \r\n\r\n                        ))}\r\n                            \r\n                    </div>\r\n                   }    \r\n                </div>\r\n            </div>\r\n                <div className=\"your-products\">\r\n                       \r\n                        \r\n                        <div className=\"cart-summ\">\r\n                            <h1>Order Summary</h1>\r\n                            \r\n                                    <div className=\"calculs-placeorder\">\r\n                                <h3>Items: </h3><p>${order.itemsPrice}</p>\r\n                                <h3>Shipping: </h3><p>${order.shippingPrice}</p>\r\n                                <h3>Tax: </h3><p>${order.taxPrice}</p>\r\n                                <h3>Total: </h3><p>${order.totalPrice}</p>\r\n                              </div>\r\n\r\n\r\n                                \r\n                            \r\n                        </div>\r\n                        <div className = 'bottominfos'>\r\n                        <h1 className = 'orderid'>Order : {order._id}</h1>\r\n                        {!order.isPaid && (\r\n                            <>\r\n                            {loadingpay && <div className='loading-product'>\r\n                                            <HashLoader   color={\"#1e1e2c\"}  loading={loading} size={50} />\r\n                                           </div> }\r\n                            {!sdkReady ? <div className='loading-product'>\r\n                                            <HashLoader   color={\"#1e1e2c\"}  loading={loading} size={50} />\r\n                                           </div> :\r\n                                           <div className = 'paypalbuttons'>\r\n                                           <PayPalButton className = 'buttonsp' amount = {order.totalPrice} onSuccess = {successpaymenthandler}/>\r\n                                           </div>}\r\n                            </>\r\n                        )}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered &&(\r\n                            <Button   height=\"40px\" width = \"200px\"\r\n                            size = \"lg\" onClick = {deliverhandler} leftIcon = {<IoMdDoneAll size = '16' />} colorScheme ='blue' size=\"xs\" >DELIVERED</Button>\r\n                        )}\r\n\r\n                        </div>\r\n\r\n                    \r\n                    </div>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\placeorder\\Placeorder.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Userslist\\Users.js",["261","262"],"import React,{useEffect} from 'react'\r\nimport { ListUsers,DeleteUser } from '../../actions/userActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport './Users.css'\r\n\r\nimport {\r\n    Button, Input, Table,  Thead,\r\n    Tbody,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    Stack,\r\n    Box,\r\n  } from \"@chakra-ui/react\"\r\n  import { Helmet } from 'react-helmet';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { AiFillDelete, AiOutlineEdit } from 'react-icons/ai';\r\n\r\nconst Users = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(ListUsers())\r\n\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,history,successDelete,userInfo])\r\n\r\n    const deletehandler = (id) =>{\r\n        if(window.confirm('Are You Sure?')){\r\n            dispatch(DeleteUser(id))\r\n        }\r\n    }\r\n    return (\r\n        <div className = 'Users'>\r\n            <Helmet>\r\n                <title>Users</title>\r\n            </Helmet>\r\n        <h1 className = 'titlepanel'> Users :</h1>\r\n        {loading ?  <div className='loading'>\r\n                     <HashLoader   color={\"#1e1e2c\"}  loading={loading} size={40} />\r\n                   </div> : \r\n                   error ? <h1>error</h1> :\r\n                   <Box overflowX = 'auto'>\r\n                   <Table  className = 'tableusers' variant=\"striped\">\r\n                       <Thead>\r\n                        <Tr>\r\n                            <Th textAlign = 'center'w = '10%'>ID</Th>\r\n                            <Th textAlign = 'center' w = '20%'>Name</Th>\r\n                            <Th textAlign = 'center' w = '50%'>Email</Th>\r\n                            <Th textAlign = 'center' w = '10%'>Admin</Th>\r\n                            <Th textAlign = 'center' w = '10%'></Th>\r\n                        </Tr>\r\n                      </Thead>\r\n                      <Tbody>\r\n                            {users.map(user =>(\r\n                                <Tr key = {user._id}>\r\n                                    <Td>{user._id}</Td>\r\n                                    <Td>{user.name}</Td>\r\n                                    <Td><a href = {`mailto:${user.email}`}></a>{user.email}</Td>\r\n                                    <Td>{user.isAdmin ? <div className ='paid'>YES</div> : <div className = 'notpaid'>NO</div>}</Td>\r\n                                    <Td>\r\n                                        <Stack>\r\n                                        <Link to ={ `/admin/user/${user._id}/edit`}>\r\n                                             <Button leftIcon = {<AiOutlineEdit size = '16' />} colorScheme ='blue' size=\"xs\"  >EDIT</Button>\r\n                                        </Link>\r\n                                             <Button colorScheme ='red' leftIcon = {<AiFillDelete size = '16' />} size=\"xs\" onClick= {()=>{deletehandler(user._id)}}>DELETE</Button>\r\n                                        </Stack>\r\n                                    </Td>\r\n\r\n                                </Tr>\r\n                            ))}\r\n                      </Tbody>\r\n                    </Table>\r\n                    </Box>\r\n                   }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Orders\\Orders.js",["263","264"],"import React,{useEffect} from 'react'\r\nimport { listOrders} from '../../actions/orderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nimport {\r\n    Button, Input, Table,  Thead,\r\n    Tbody,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    Stack,\r\n    Box,\r\n  } from \"@chakra-ui/react\"\r\nimport { Link } from 'react-router-dom';\r\nimport { AiFillDelete, AiOutlineEdit } from 'react-icons/ai';\r\n\r\nconst Orders = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading,error,orders} = orderList\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,history,userInfo])\r\n\r\n    return (\r\n        <div className = 'Users'>\r\n            <Helmet>\r\n                <title>Orders</title>\r\n            </Helmet>\r\n        <h1 className = 'titlepanel'> Orders :</h1>\r\n        {loading ?  <div className='loading'>\r\n                     <HashLoader   color={\"#1e1e2c\"}  loading={loading} size={40} />\r\n                   </div> : \r\n                   error ? <h1>error</h1> :\r\n                   <Box overflowX = 'auto'>\r\n                   <Table  className = 'tableusers' variant=\"striped\">\r\n                       <Thead>\r\n                        <Tr>\r\n                            <Th textAlign = 'center'w = '10%'>ID</Th>\r\n                            <Th textAlign = 'center' w = '20%'>User</Th>\r\n                            <Th textAlign = 'center' w = '20%'>Date</Th>\r\n                            <Th textAlign = 'center' w = '5%'>TOTAL</Th>\r\n                            <Th textAlign = 'center' w = '10%'>PAID</Th>\r\n                            <Th textAlign = 'center' w = '10%'>Deliverd</Th>\r\n\r\n                        </Tr>\r\n                      </Thead>\r\n                      <Tbody>\r\n                            {orders.map(order =>(\r\n                                <Tr key = {order._id}>\r\n                                    <Td>{order._id}</Td>\r\n                                    <Td>{order.user && order.user.name}</Td>\r\n                                    <Td>{order.createdAt.substring(0,10)}</Td>\r\n                                    <Td>{order.totalPrice}</Td>\r\n\r\n                                    <Td>{order.isPaid ? <div className ='paid'>{order.paidAt.substring(0,10)}</div> : <div className = 'notpaid'>NO</div>}</Td>\r\n                                    <Td>{order.isDelivered ? <div className ='paid'>{order.deliveredAt.substring(0,10)}</div> : <div className = 'notpaid'>NO</div>}</Td>\r\n\r\n                                    <Td>\r\n                                        <Stack>\r\n                                        <Link to ={ `/order/${order._id}`}>\r\n                                             <Button leftIcon = {<AiOutlineEdit size = '16' />} colorScheme ='blue' size=\"xs\"  >Details</Button>\r\n                                        </Link>\r\n                                        </Stack>\r\n                                    </Td>\r\n\r\n                                </Tr>\r\n                            ))}\r\n                      </Tbody>\r\n                    </Table>\r\n                    </Box>\r\n                   }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Editproduct\\Editproduct.js",["265","266","267","268","269"],"import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listProductDetails,UpdateProduct} from '../../actions/productActions'\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { Input, InputGroup, } from '@chakra-ui/input'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {Box, Checkbox, Stack, Textarea, VStack} from '@chakra-ui/react'\r\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productConstants';\r\nimport './Editproduct.css'\r\nconst Editproduct = ({match,history}) => {\r\n    const productId = match.params.id\r\n    const [name,setName] = useState('')\r\n    const [description,setdescription] = useState('')\r\n    const [price,setprice] = useState(0)\r\n    const [countInStock,setcountInStock] = useState(0)\r\n    const [Url1,setUrl1] = useState('')\r\n    const [Url2,setUrl2] = useState('')\r\n    const [Url3,setUrl3] = useState('')\r\n\r\n    const [Images,setImages] = useState([])\r\n    const [sizes,setsizes] = useState([])\r\n    const [category,setcategory] = useState([])\r\n    const [Menselected,setMenselected] = useState(false)\r\n    const [Womenselected,setWomenselected] = useState(false)\r\n    const [Bagselected,setBagselected] = useState(false)\r\n    const [Watchesselected,setWatchesselected] = useState(false)\r\n    const [Shoesselected,setShoesselected] = useState(false)\r\n    const [Jacketselected,setJacketselected] = useState(false)\r\n\r\n    const [Sselected,setSselected] = useState(false)\r\n    const [Mselected,setMselected] = useState(false)\r\n    const [Lselected,setLselected] = useState(false)\r\n    const [XLselected,setXLselected] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [message,setMessage] = useState(null) \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n  \r\n    const { loading,error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n  \r\n    const { loading:lodingUpdate,error:errorUpdate, success:successUpdate } = productUpdate\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch({type : PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }\r\n        else{\r\n            if(!product.name || product._id !== productId){\r\n                dispatch(listProductDetails(productId))\r\n              }else{\r\n                setName(product.name)\r\n                setprice(product.price)\r\n                setdescription(product.description)\r\n                setUrl1(product.images[0])\r\n                setUrl2(product.images[1])\r\n                setUrl3(product.images[2])\r\n                setcategory(product.category)\r\n                setsizes(product.sizes)\r\n                setcountInStock(product.countInStock)\r\n                setBagselected(category.includes(\"Bag\"))\r\n                setJacketselected(category.includes(\"Jacket\"))\r\n                setShoesselected(category.includes(\"Shoes\"))\r\n                setMenselected(category.includes(\"Men\"))\r\n                setWomenselected(category.includes(\"Women\"))\r\n                setWatchesselected(category.includes(\"Watches\"))\r\n                setSselected(sizes.includes('S'))\r\n                setLselected(sizes.includes('L'))\r\n                setMselected(sizes.includes('M'))\r\n                setXLselected(sizes.includes('XL'))\r\n\r\n              }\r\n        }\r\n\r\n      \r\n       \r\n        return () => {\r\n        }\r\n    }, [dispatch,productId,history,product,category,successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        Images.push(Url1)\r\n        Images.push(Url2)\r\n        Images.push(Url3)\r\n\r\n\r\n        e.preventDefault()\r\n        dispatch(UpdateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            Images,\r\n            category,\r\n            sizes,\r\n            countInStock,\r\n            description\r\n\r\n        }))\r\n    }\r\n    const checkboxhandler = (D) =>{\r\n        let index = sizes.indexOf(D)\r\n        if(index> -1){ \r\n            sizes.splice(index,1)\r\n            console.log(sizes)\r\n        }\r\n        else{\r\n            sizes.push(D)\r\n            console.log(sizes)\r\n\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    const checkboxhandlercg = (D) =>{\r\n        \r\n            let index = category.indexOf(D)\r\n        if(index> -1){ \r\n            category.splice(index,1)\r\n\r\n        }\r\n        else{\r\n            category.push(D)\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'Edituser'>\r\n            <Helmet>\r\n                <title>Edit Product</title>\r\n            </Helmet>\r\n               {error && <h4>{error}</h4>}\r\n               {/* {successUpdate && <h4>Profile Updated</h4>} */}\r\n               {loading || lodingUpdate ? \r\n                        <div className='loading'>\r\n                            <HashLoader   color={\"#1e1e2c\"}  loading={lodingUpdate} size={40} />\r\n                        </div>\r\n                \r\n                : errorUpdate ? <h4>{errorUpdate}</h4> :\r\n          <div>\r\n            <h4 className = 'Edittitle'>Edit Product :</h4>\r\n            <div className ='formedit'>\r\n            \t\t<form onSubmit={submitHandler}>\r\n\r\n                <div >\r\n                <div className=\"input-div zz\">\r\n                Name :\r\n\r\n                   <div className=\"div\">\r\n                       \r\n                   <InputGroup>\r\n\r\n                      <Input type=\"text\" value={name}  placeholder=\"Enter name\"  onChange={(e) => setName(e.target.value)}/>\r\n                   </InputGroup>\r\n           \t\t   </div>\r\n           \t\t</div>\r\n\r\n\r\n           \t\t<div className=\"input-div one\">\r\n                   Price :\r\n\r\n           \t\t   <div className=\"div\">\r\n\r\n           \t\t   \t\t<InputGroup>\r\n                              <Input  type=\"text\" value={price} placeholder=\"Enter price\" onChange={(e) => setprice(e.target.value)} />\r\n                         </InputGroup>\r\n                         \r\n           \t\t   </div>\r\n                  \r\n           \t\t</div>\r\n                   <div className=\"input-div one\">\r\n                   countInStock :\r\n\r\n           \t\t   <div className=\"div\">\r\n           \t\t   \t\t<InputGroup>\r\n                              <Input  type=\"text\" value={countInStock} placeholder=\"Enter price\" onChange={(e) => setcountInStock(e.target.value)} />\r\n                         </InputGroup>\r\n                         \r\n           \t\t   </div>\r\n                  \r\n           \t\t</div>\r\n                   <div className=\"input-div one\">\r\n                       Description/Category\r\n           \t\t   <div className=\"div\">\r\n                          <Stack direction = 'column' spacing={4}>\r\n                          <InputGroup>\r\n                              <Textarea size = 'sm' value={description}  placeholder=\"Enter price\" onChange={(e) => setdescription(e.target.value)} />\r\n                         </InputGroup>\r\n                         <Stack direction=\"row\">\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Men');setMenselected(!Menselected)}} isChecked = {Menselected}>Men </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Women') ; setWomenselected(!Watchesselected)}} isChecked = {Womenselected}>Women </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Bag'); setBagselected(!Bagselected)}} isChecked = {Bagselected}>Bag </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Watches') ; setWatchesselected(!Watchesselected)}} isChecked = {Watchesselected}>Watches </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Shoes') ; setShoesselected(!Shoesselected)}} isChecked = {Shoesselected}>Shoes </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandlercg('Jacket') ; setJacketselected(!Jacketselected)}} isChecked = {Jacketselected}>Jacket </Checkbox>\r\n                      </Stack>\r\n  \r\n                          </Stack>\r\n                          \r\n          \r\n           \t\t   </div>\r\n                  \r\n           \t\t</div>\r\n\r\n\r\n\r\n                \r\n\r\n           \t\t<div className=\"input-div pass\">\r\n\r\n           \t\t   <div className=\"div\">\r\n                      \r\n            \t   </div>\r\n            \t</div>\r\n\r\n                <div className=\"input-div pass\">\r\n                Sizes:\r\n\r\n           \t\t   <div className=\"div\">\r\n\r\n                      <Stack direction=\"row\">\r\n                      <Checkbox onChange = {() =>{checkboxhandler('S') ; setSselected(!Sselected)}} isChecked = {Sselected}>S </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandler('M') ; setMselected(!Mselected)}} isChecked = {Mselected}>M </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandler('L') ; setLselected(!Lselected)}} isChecked = {Lselected}>L </Checkbox>\r\n                      <Checkbox onChange = {() =>{checkboxhandler('XL') ; setXLselected(!XLselected)}} isChecked = {XLselected}>XL </Checkbox>\r\n                      </Stack>\r\n            \t   </div>\r\n            \t</div>\r\n                <div className=\"input-div pass\">\r\n                Urls for images:\r\n           \t\t   <div className=\"div urls\">\r\n\r\n  \r\n\r\n                      <Box>\r\n                         <Stack direction ='column' >\r\n                            <Input type= 'text' value={Url1} onChange = {(e)=>{setUrl1(e.target.value)}}/>\r\n                            <Input type= 'text' value={Url2} onChange = {(e)=>{setUrl2(e.target.value)}}/>\r\n                            <Input type= 'text' value={Url3} onChange = {(e)=>{setUrl3(e.target.value)}}/>\r\n                         </Stack> \r\n                         </Box>\r\n                      {/* <Input type= 'text' value={category} onChange = {(e)=>{setcategory((e.target.value).split(' ')) ; }}/> */}\r\n            \t   </div>\r\n            \t</div>\r\n                {message && <h4 className = 'Message'>{message}</h4>}\r\n                <input type=\"submit\" className=\"btna2 postionbtnupdate\" value=\"Update\"/>\r\n                \r\n                </div>\r\n                \r\n               \r\n            \t\r\n                \r\n              \r\n            </form>\r\n            </div>\r\n            </div>\r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editproduct\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\pages\\Useredit\\Edituser.js",["270","271","272","273","274","275","276","277","278"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Image} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getUserDetails,updateUser} from '../../actions/userActions'\r\nimport { AiOutlineUser, HiOutlineMail, IoIosArrowDown } from 'react-icons/all';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport './Edituser.css'\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport { Checkbox } from '@chakra-ui/checkbox'\r\nimport {  USER_UPDATE_RESET } from '../../constants/userConstants';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nconst Edituser = ({match,history}) => {\r\n    const userId = match.params.id\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [isAdmin,setisAdmin] = useState(false)\r\n    const [message,setMessage] = useState(null) \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n  \r\n    const { loading,error, user } = userDetails\r\n\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n  \r\n    const { loading:loadingUpdate,error:errorUpdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        dispatch({type: USER_UPDATE_RESET})\r\n        history.push('/admin/userlist')\r\n      }else{\r\n        if(!user.name || user._id !== userId){\r\n          dispatch(getUserDetails(userId))\r\n        }else{\r\n          setName(user.name)\r\n          setEmail(user.email)\r\n          setisAdmin(user.isAdmin)\r\n        }\r\n      }\r\n       \r\n        return () => {\r\n        }\r\n    }, [dispatch,userId,history,user,successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: userId,name,email,isAdmin}))\r\n    }\r\n\r\n    const inputs = document.querySelectorAll(\".inputa\");\r\n\r\n\r\n    function addcl(){\r\n      let parent = this.parentNode.parentNode;\r\n      parent.classList.add(\"focus\");\r\n    }\r\n    \r\n    function remcl(){\r\n      let parent = this.parentNode.parentNode;\r\n      if(this.value == \"\"){\r\n        parent.classList.remove(\"focus\");\r\n      }\r\n    }\r\n  \r\n    inputs.forEach(inputa => {\r\n        inputa.addEventListener(\"focus\", addcl);\r\n        inputa.addEventListener(\"blur\", remcl);\r\n      });\r\n\r\n\r\n    return (\r\n        <div className = 'Edituser'>\r\n          <Helmet>\r\n            <title>Edit User</title>\r\n          </Helmet>\r\n               {error || errorUpdate && <h4>{error || errorUpdate}</h4>}\r\n               {successUpdate && <h4>Profile Updated</h4>}\r\n               {loading || loadingUpdate ? \r\n                        <div className='loading'>\r\n                            <HashLoader   color={\"#1e1e2c\"}  loading={loading || loadingUpdate} size={40} />\r\n                        </div>\r\n                \r\n                : error ? <h4>{error}</h4> :\r\n          <div>\r\n            <h4 className = 'Edittitle'>Edit User :</h4>\r\n            <div className ='formedit'>\r\n            \t\t<form onSubmit={submitHandler}>\r\n\r\n                <div >\r\n                <div className=\"input-div zz\">\r\n                   <div className=\"div\">\r\n                   <InputGroup>\r\n                      <Input type=\"text\" value={name}  placeholder=\"Enter name\"  onChange={(e) => setName(e.target.value)}/>\r\n                      <InputRightElement children={<AiOutlineUser/>} />\r\n                   </InputGroup>\r\n           \t\t   </div>\r\n           \t\t</div>\r\n\r\n\r\n           \t\t<div className=\"input-div one\">\r\n           \t\t   <div className=\"div\">\r\n           \t\t   \t\t<InputGroup>\r\n                              <Input  type=\"email\" value={email} placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)} />\r\n                              <InputRightElement children={<HiOutlineMail/>} />\r\n                         </InputGroup>\r\n           \t\t   </div>\r\n                  \r\n           \t\t</div>\r\n\r\n\r\n\r\n                \r\n\r\n           \t\t<div className=\"input-div pass\">\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t<Checkbox isChecked={isAdmin} onChange = {(e)=>{setisAdmin(e.target.checked) ; console.log(isAdmin)}}>isAdmin</Checkbox>\r\n            \t   </div>\r\n            \t</div>\r\n                {message && <h4 className = 'Message'>{message}</h4>}\r\n                <input type=\"submit\" className=\"btna2\" value=\"Update\"/>\r\n                \r\n                </div>\r\n                \r\n               \r\n            \t\r\n                \r\n              \r\n            </form>\r\n            </div>\r\n            </div>\r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edituser\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Cardscg.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ProductsC.js",["279","280"],"import React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport CardProduct from './CardProduct'\r\nimport {listProducts,ListproductbyCg, Listproductbyfiter,Listproductbyprice} from '../actions/productActions'\r\nimport {BsFilter,AiOutlineSearch,IoMdClose} from 'react-icons/all'\r\nimport Search from './Search';\r\nimport {NumberInput,NumberInputField,FormLabel, Button, Stack, FormControl} from \"@chakra-ui/react\"\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { Link, Route } from 'react-router-dom'\r\nconst ProductsC = ({match,history}) => {\r\n    const [From, setFrom] = useState(0)\r\n    const [To, setTo] = useState(0)\r\n\r\n    let Cg = window.location.search ? window.location.search.split('=')[1] : null\r\n    const keyword = window.location.pathname.split('/')[2] \r\n    const dispatch = useDispatch()\r\n    const productList = useSelector((state) => state.productList)\r\n    const productbycg = useSelector((state)=>{\r\n        return state.ListproductbyCg\r\n    })\r\n    const productbyfilter = useSelector((state)=>{\r\n        return state.Listproductbyfilter\r\n    })\r\n    const productbyprice = useSelector((state)=>{\r\n        return state.Listproductbyprice\r\n    })\r\n    \r\n    const {loading,error,products} = productbycg ? productbycg : productList ? productList : productbyprice ;\r\n    useEffect(()=>{\r\n \r\n        if(Cg){\r\n            console.log(window.location.search.split('=')[0])\r\n            if(window.location.search.split('=')[0] === '?cg'){\r\n                dispatch(ListproductbyCg(Cg))\r\n                console.log(products)\r\n\r\n            }else{\r\n                dispatch(Listproductbyfiter(Cg))\r\n\r\n            }\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    },[dispatch,Cg,keyword])\r\n    const [showfilter,setshowfilter] = useState(false);\r\n    const [showsearch,setshowsearch] = useState(false);\r\n    const filterfunc = () =>{\r\n        setshowfilter(!showfilter);\r\n        if(showsearch){\r\n            setshowsearch(false)\r\n        }\r\n \r\n    }\r\n    const searchfunc=()=>{\r\n        setshowsearch(!showsearch);\r\n        if(showfilter){\r\n            setshowfilter(false)\r\n        }\r\n    }\r\n    const pricehandler = ()=>{\r\n        dispatch(Listproductbyprice(From,To))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className = 'Cgfilter'>\r\n            <h1>{Cg ? Cg : keyword ?  \"*\" + keyword + \"* Search\" : 'All'} Products</h1>\r\n            <div className = 'filtersbtn '>\r\n            <button className = {`filterbtn ${showfilter ? 'activebtn' : ''}` }  \r\n            onClick = {filterfunc} > {showfilter ?  <IoMdClose  size = '20'/>: <BsFilter size = '20'/> } \r\n            Filter\r\n            </button>\r\n       \r\n            <button className = {`searchbtn ${showsearch ? 'activebtn' : ''}` } onClick = {searchfunc}>{showsearch ?  <IoMdClose  size = '20'/>:<AiOutlineSearch size = '20'/>}Search</button>\r\n            </div>\r\n        \r\n            <div className = 'filters'> \r\n            <ul>\r\n                    <Link className = 'lined' to = '?cg'>All</Link>\r\n                    <Link className = 'lined'  to = '?cg=Men'>Men</Link>\r\n                    <Link className = 'lined'  to = '?cg=Women'>Women</Link>\r\n                    <Link className = 'lined'  to = '?cg=Watches'>Watches</Link>\r\n                    <Link className = 'lined' to = '?cg=Shoes'>Shoes</Link>\r\n                    <Link to = '?cg=Bag' className = 'lined'>Bag</Link>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        {showsearch && <Route render = {({history}) => <Search  history = {history}/> }/>} \r\n        <div className = {`filterarea ${showfilter ? 'filter' : 'filteroff' }`}>\r\n        <div className = 'sortbydiv'>\r\n            <h1> Sort By</h1>\r\n            <ul>\r\n                <Link onClick = {()=>(setshowfilter(false))} className = 'lined' to = '?filter'>Default</Link>\r\n                <Link onClick = {()=>(setshowfilter(false))} className = 'lined' to = '?filter=Rating'>Rating</Link>\r\n                <Link onClick = {()=>(setshowfilter(false))} className = 'lined' to = '?filter=date'>Date</Link>\r\n                <Link onClick = {()=>(setshowfilter(false))} className = 'lined' to = '?filter=highprice'>Low to high price</Link>\r\n                <Link onClick = {()=>(setshowfilter(false))} className = 'lined' to = '?filter=lowprice'>high to low price</Link>\r\n            </ul> \r\n        </div>\r\n        <div className = 'pricediv'>\r\n            <h1> Price</h1>\r\n            <FormControl id=\"email\">\r\n                <Stack spacing = {2}>\r\n                 <FormLabel>From :</FormLabel>\r\n                 <NumberInput value={From} bg = 'white' onChange = {(e) => setFrom(e)} borderRadius=\"md\" borderTopRadius=\"md\" borderTopLeftRadius=\"md\">\r\n                 <NumberInputField />\r\n                </NumberInput>\r\n                 <FormLabel>To :</FormLabel>\r\n                <NumberInput value = {To} bg = 'white' onChange = {(e) => setTo(e)} borderRadius=\"md\" borderTopRadius=\"md\" borderTopLeftRadius=\"md\">\r\n                 <NumberInputField />\r\n                </NumberInput>\r\n                <Button onClick = {pricehandler} type=\"submit\" colorScheme=\"teal\">Filter</Button>\r\n                </Stack>\r\n            </FormControl>\r\n\r\n        </div>\r\n \r\n    </div>\r\n            {loading ?\r\n               <div className='loading'>\r\n                          <HashLoader   color={\"#fff\"}  loading={loading} size={40} />\r\n                     </div> \r\n            : error ? <h2>{error} </h2> \r\n            : products.length === 0 ? \r\n            <h1 className = 'nothingfound'>Nothing Found !!!</h1> : <div className='cardsProduct'>\r\n                       {products.map((product) =>(\r\n                               <CardProduct key={product._id} product={product} />\r\n\r\n                          )  )}\r\n\r\n                  \r\n                 </div> }\r\n                   \r\n        </> \r\n    )\r\n}\r\n\r\nexport default ProductsC\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Slider.js",["281"],"import {React,useEffect,useState}  from 'react'\r\nimport {IoIosArrowForward,IoIosArrowBack} from 'react-icons/all'\r\nimport { Link } from 'react-router-dom';\r\nimport ShopNowBtn from './ShopNowBtn'\r\nconst Slider = () => {\r\n     const SliderData = [\r\n        {\r\n          title: 'Jackets & Coats',\r\n          subtitle :'Quality Matters.'\r\n        },\r\n        {\r\n            title: 'Find The Best Outfit',\r\n            subtitle :'With 30% Off'\r\n        },\r\n        {\r\n \r\n            title: 'The Best Shoes',\r\n            subtitle :'Comfort For your long day'\r\n        },\r\n        {\r\n \r\n            title: 'Next Season Is here',\r\n            subtitle :'Enjoy your summer with us.'\r\n        }\r\n      ];\r\n    const [current, setCurrent] = useState(0);\r\n    const length = SliderData.length;\r\n    const [auto,setauto] = useState(true);\r\n    const intervaltime = 6000;\r\n    let slideinterval;\r\n    const nextslide = () =>{\r\n        clearInterval(slideinterval);\r\n        slideinterval = setInterval(nextslide,intervaltime);\r\n        setTimeout(()=>setCurrent(current === length - 1 ? 0 : current + 1))\r\n \r\n    }\r\n    const prevslide = () =>{\r\n        clearInterval(slideinterval);\r\n        slideinterval = setInterval(nextslide,intervaltime);\r\n        setTimeout(()=>setCurrent(current === 0 ? length - 1 : current - 1))         \r\n   }\r\n   useEffect(()=>{\r\n     setauto(true)\r\n    if(auto){\r\n      slideinterval = setInterval(nextslide,intervaltime);\r\n      }\r\n    return ()=>{ \r\n      setauto(false);\r\n      clearInterval(slideinterval);\r\n    }\r\n   })\r\n \r\n    return (\r\n        <div className = 'slider'>\r\n            {SliderData.map((slide,index) =>{\r\n                return(\r\n                    <div key = {index} className={index === current ? 'slide current' : 'slide'}>\r\n                    <h1 className = 'titleslider'>{slide.title}</h1>\r\n                    <h3 className = 'subtitleslider'>{slide.subtitle}</h3>\r\n                    <div className = 'content'> <Link to= '/Shop'> <ShopNowBtn /></Link>  </div>\r\n                    </div>\r\n                );\r\n \r\n            })}\r\n            <IoIosArrowForward className ='next' size ='32' onClick = {nextslide}/>\r\n            <IoIosArrowBack className = 'prev' size ='32' onClick = {prevslide}/>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Slider","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\CgDiv.js",["282"],"import {React , useState} from 'react'\r\n\r\n \r\nconst CgDiv = () => {\r\n \r\n\r\n \r\n    return (\r\n        <div>\r\n           \r\n        \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default CgDiv","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Searchnav.js",["283","284"],"import { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport React, { useState } from 'react'\r\nimport { IoCloseOutline } from 'react-icons/io5'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nconst Searchnav = ({history}) => {\r\n    const [keyword, setkeyword] = useState('')\r\n\r\n    const Handlesearch = (e) => {\r\n        if(keyword.trim() && e.which == 13){\r\n            history.push(`/search/${keyword}`)\r\n        }else{\r\n        }\r\n    }\r\n    return (\r\n        <InputGroup >\r\n        <Input value = {keyword} onChange = {e=> setkeyword(e.target.value)} bgColor='white' placeholder='Search here ...'  onKeyPress = {Handlesearch} ></Input>\r\n        <InputRightElement children={ <MdSearch/>} />\r\n        </InputGroup>\r\n\r\n\r\n                          \r\n        \r\n        \r\n    \r\n\r\n    )\r\n}\r\n\r\nexport default Searchnav\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Empty.js",["285"],"import React,{useState} from 'react'\r\nimport {ReactComponent as EmptyS} from \"./Empty.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { RiArrowRightSLine  , TiArrowRight,BsArrowBarRight} from \"react-icons/all\";\r\n\r\n\r\nconst Empty = () => {\r\n    const [arrow, setarrow] = useState(false)\r\n    return (\r\n        <div className = 'Emptycart'>\r\n            <EmptyS className = 'illustration'/>\r\n            <div className = 'textempty'>\r\n            <h1>\r\n                Wow Such an empty Cart\r\n            </h1>\r\n             \r\n            <Link to = '/shop' className ='goshop' onMouseOver = {()=>{setarrow(true)}} onMouseLeave = {()=>{setarrow(false)}}>\r\n            Go Shop\r\n            {!arrow ? <RiArrowRightSLine className = 'arrow' /> : <BsArrowBarRight className = 'arrow'/> }\r\n            </Link>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Empty\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Productoncart.js",["286","287"],"import { Image } from '@chakra-ui/image'\r\nimport React,{useRef,useState,useEffect} from 'react'\r\nimport { Select } from \"@chakra-ui/react\"\r\nimport { VscChromeClose } from \"react-icons/all\";\r\nimport { addToCart,removeFromCart } from '../actions/cartActions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Productoncart = ({product}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [qty,setqty] = useState(0)\r\n    const select = useRef(null);\r\n    useEffect(() => {\r\n        console.log(product.images)\r\n        return () => {\r\n        }\r\n    },[])\r\n\r\n    const optionvalue = () => {\r\n         setqty(parseInt(select.current.value));\r\n    }\r\n    const removeFromCartHandler  = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    return (\r\n        <div className = 'productcart'>\r\n            <div className = 'imagecart'>\r\n            <Image objectFit=\"cover\" src = {product.images[0]}/>\r\n\r\n            </div>\r\n                <div>\r\n                    <Link to = {`/product/${product.product}`}>\r\n                        <h2 className = 'productname'>\r\n                            {product.name}\r\n                        </h2>\r\n                    </Link>\r\n\r\n                <h2 className = 'priceproduct'>\r\n                    ₹{product.price}</h2>\r\n                <h2 className = 'sandh'>\r\n                    sold and shiped by FedEx</h2>\r\n\r\n                </div>\r\n                <div className = 'qtyoption' >\r\n                <Select ref = {select} defaultValue = {product.qty}  onChange ={e =>dispatch(addToCart(product.product,Number(e.target.value)))}>\r\n                    {[...Array(product.countInStock).keys()].map(x=>\r\n                     (\r\n                     <option value={x+1}> {x+1}</option>\r\n                     )\r\n                    )}\r\n                </Select>\r\n                <h2>\r\n                ₹{(qty === 0 ? product.qty*product.price : qty*product.price).toFixed(2)}\r\n                </h2>\r\n                </div>\r\n                <VscChromeClose className = 'deletecart' size = '26' onClick = {() => removeFromCartHandler(product.product)} />\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Productoncart\r\n","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\productActions.js",["288"],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n} from '../constants/productConstants'\r\nexport const listProducts =  (keyword = '') => async(dispatch) => {\r\n    try {\r\n        dispatch({type : PRODUCT_LIST_REQUEST})\r\n        const { data }  = await axios.get(`/api/products?keyword=${keyword}`)\r\n        \r\n        dispatch({type : PRODUCT_LIST_SUCCESS,\r\n                  payload : data,\r\n                 })\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_LIST_FAIL,\r\n                  payload: \r\n                  error.response && error.response.data.message\r\n                  ? error.response.data.message \r\n                  : error.message,\r\n                })\r\n    }\r\n\r\n}\r\nexport const ListproductbyCg = (Cg) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type : PRODUCT_LIST_REQUEST })\r\n        const {data} = await axios.get(`/api/products/?Cg=${Cg}`)\r\n        dispatch({type : PRODUCT_LIST_SUCCESS , payload : data})\r\n        console.log(data)\r\n        } catch (error) {\r\n            dispatch({type : PRODUCT_LIST_FAIL , \r\n                      payload : error.response && error.response.data.message \r\n                      ? error.response.data.message : error.message, })\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const Listproductbyfiter = (filter) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type : PRODUCT_LIST_REQUEST })\r\n        const {data} = await axios.get(`/api/products/?filter=${filter}`)\r\n        dispatch({type : PRODUCT_LIST_SUCCESS , payload : data})\r\n        console.log(data)\r\n        } catch (error) {\r\n            dispatch({type : PRODUCT_LIST_FAIL , \r\n                      payload : error.response && error.response.data.message \r\n                      ? error.response.data.message : error.message, })\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const Listproductbyprice = (from,to) => async (dispatch) =>{\r\n    try {\r\n        dispatch({type : PRODUCT_LIST_REQUEST })\r\n        const {data} = await axios.get(`/api/products/?from=${from}&to=${to}`)\r\n        dispatch({type : PRODUCT_LIST_SUCCESS , payload : data})\r\n        console.log(data)\r\n        } catch (error) {\r\n            dispatch({type : PRODUCT_LIST_FAIL , \r\n                      payload : error.response && error.response.data.message \r\n                      ? error.response.data.message : error.message, })\r\n        \r\n    }\r\n\r\n}\r\nexport const listProductDetails =  (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({type : PRODUCT_DETAILS_REQUEST})\r\n        \r\n        const { data }  = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({type : PRODUCT_DETAILS_SUCCESS,\r\n                  payload : data,\r\n                 })\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL,\r\n                  payload: \r\n                  error.response && error.response.data.message\r\n                  ? error.response.data.message \r\n                  : error.message,\r\n                })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const DeleteProduct = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST \r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config) \r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n                })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const CreateProduct = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST \r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products/`,{}, config) \r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload : data\r\n                })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const UpdateProduct = (product) => async(dispatch, getState) => {\r\n    console.log(product)\r\n\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST \r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/products/${product._id}`,product, config) \r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload : data\r\n                })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\nexport const createproductReview = (productId,review) => async(dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST \r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`,review, config) \r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n                })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\Search.js",["289"],"import React, { useState } from 'react'\r\nimport {Input} from '@chakra-ui/react'\r\n \r\nconst Search = ({history}) => {\r\n    const [keyword, setkeyword] = useState('')\r\n    const Handlesearch = (e) => {\r\n        if(keyword.trim() && e.which == 13){\r\n            history.push(`/search/${keyword}`)\r\n        }else{\r\n        }\r\n    }\r\n    return (\r\n        <div className = 'Searcharea'>\r\n        <Input size=\"lg\" value = {keyword} onChange = {e=> setkeyword(e.target.value)} onKeyPress = {Handlesearch} bgColor  = 'white' placeholder=\"Tap For Search\" />\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Search","C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\ShopNowBtn.js",[],"C:\\Users\\imjas\\OneDrive\\Desktop\\final\\Mern-Ecommerce-website\\frontend\\src\\components\\CardProduct.js",["290"],"import {React,useState,useEffect} from 'react'\r\nimport {HiOutlineShoppingCart,HiShoppingCart} from \"react-icons/all\"\r\nimport { Image } from \"@chakra-ui/react\"\r\nimport {Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\nimport { addToCart } from \"../actions/cartActions\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst CardProduct = ({product}) => {\r\n    const  [showbtn,setShowbtn] = useState(false) \r\n    const  [Incart,setIncart] = useState(false) \r\n    const dispatch = useDispatch();\r\n    const Cart = useSelector(state => state.cart)\r\n    const {cartItems} = Cart\r\n    useEffect(() => {\r\n       const isincart = cartItems.find(x => x.product === product._id);\r\n       if(isincart){\r\n           setIncart(true);\r\n\r\n       }\r\n       return () => {\r\n           \r\n       }\r\n   }, )\r\n   const addcart = ()=>{\r\n       setIncart(true);\r\n       dispatch(addToCart(product._id,1))\r\n   }\r\n    \r\n     return (\r\n        <>  \r\n            <div className='cardProduct' onMouseOver={ ()=> {setShowbtn (true)}} \r\n                                          onMouseLeave= { ()=> {setShowbtn (false)}}>           \r\n                 <div className='imgDiv'>\r\n                         <Image className='imgProduct' boxSize='350px' objectFit='cover' src={product.images[0]} />  \r\n                 </div>\r\n               <div className='bottomcard'>\r\n                       <Link to={`/product/${product._id}`} exact  >     \r\n                            <span>{product.name}</span>     \r\n                       </Link>\r\n                              {Incart ?  <HiShoppingCart className=\"iconFav\" size ='26'/> : <HiOutlineShoppingCart  className=\"iconFav\" color='#999' size='26'  onClick = {addcart}/>  }\r\n\r\n                       <div className = 'productpricecard'> {`₹${product.price} `}</div>\r\n                       <div className = 'Rating'>\r\n                       <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n\r\n                       </div>\r\n\r\n                             \r\n               </div>\r\n              \r\n                      <Link to={`/product/${product._id}`} exact >\r\n                             <button className= { showbtn ? 'QuickView QuickViewActive' : 'QuickView' }> View Details</button>\r\n                      </Link>   \r\n             </div>      \r\n         </>\r\n \r\n    )\r\n}\r\n\r\nexport default CardProduct\r\n",{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":1,"column":15,"nodeType":"297","messageId":"298","endLine":1,"endColumn":23},{"ruleId":"295","severity":1,"message":"299","line":1,"column":24,"nodeType":"297","messageId":"298","endLine":1,"endColumn":33},{"ruleId":"295","severity":1,"message":"300","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":14},{"ruleId":"295","severity":1,"message":"301","line":5,"column":8,"nodeType":"297","messageId":"298","endLine":5,"endColumn":13},{"ruleId":"295","severity":1,"message":"296","line":1,"column":33,"nodeType":"297","messageId":"298","endLine":1,"endColumn":41},{"ruleId":"295","severity":1,"message":"302","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":18},{"ruleId":"295","severity":1,"message":"303","line":3,"column":9,"nodeType":"297","messageId":"298","endLine":3,"endColumn":13},{"ruleId":"295","severity":1,"message":"304","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":13},{"ruleId":"295","severity":1,"message":"305","line":14,"column":3,"nodeType":"297","messageId":"298","endLine":14,"endColumn":9},{"ruleId":"295","severity":1,"message":"306","line":14,"column":11,"nodeType":"297","messageId":"298","endLine":14,"endColumn":16},{"ruleId":"307","severity":1,"message":"308","line":59,"column":19,"nodeType":"309","messageId":"310","endLine":59,"endColumn":21},{"ruleId":"295","severity":1,"message":"306","line":5,"column":18,"nodeType":"297","messageId":"298","endLine":5,"endColumn":23},{"ruleId":"295","severity":1,"message":"311","line":5,"column":24,"nodeType":"297","messageId":"298","endLine":5,"endColumn":34},{"ruleId":"295","severity":1,"message":"312","line":5,"column":35,"nodeType":"297","messageId":"298","endLine":5,"endColumn":52},{"ruleId":"295","severity":1,"message":"313","line":6,"column":29,"nodeType":"297","messageId":"298","endLine":6,"endColumn":43},{"ruleId":"295","severity":1,"message":"314","line":6,"column":119,"nodeType":"297","messageId":"298","endLine":6,"endColumn":145},{"ruleId":"295","severity":1,"message":"315","line":9,"column":10,"nodeType":"297","messageId":"298","endLine":9,"endColumn":17},{"ruleId":"295","severity":1,"message":"316","line":43,"column":15,"nodeType":"297","messageId":"298","endLine":43,"endColumn":26},{"ruleId":"317","severity":1,"message":"318","line":88,"column":11,"nodeType":"319","endLine":88,"endColumn":17,"suggestions":"320"},{"ruleId":"295","severity":1,"message":"296","line":2,"column":20,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"303","line":3,"column":9,"nodeType":"297","messageId":"298","endLine":3,"endColumn":13},{"ruleId":"295","severity":1,"message":"306","line":17,"column":11,"nodeType":"297","messageId":"298","endLine":17,"endColumn":16},{"ruleId":"295","severity":1,"message":"321","line":19,"column":3,"nodeType":"297","messageId":"298","endLine":19,"endColumn":8},{"ruleId":"295","severity":1,"message":"322","line":23,"column":3,"nodeType":"297","messageId":"298","endLine":23,"endColumn":15},{"ruleId":"307","severity":1,"message":"308","line":97,"column":19,"nodeType":"309","messageId":"310","endLine":97,"endColumn":21},{"ruleId":"295","severity":1,"message":"323","line":115,"column":9,"nodeType":"297","messageId":"298","endLine":115,"endColumn":19},{"ruleId":"295","severity":1,"message":"303","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":13},{"ruleId":"295","severity":1,"message":"324","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":50,"column":19,"nodeType":"309","messageId":"310","endLine":50,"endColumn":21},{"ruleId":"295","severity":1,"message":"325","line":10,"column":9,"nodeType":"297","messageId":"298","endLine":10,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":100,"column":15,"nodeType":"328","endLine":100,"endColumn":43},{"ruleId":"326","severity":1,"message":"327","line":107,"column":15,"nodeType":"328","endLine":107,"endColumn":43},{"ruleId":"326","severity":1,"message":"327","line":113,"column":15,"nodeType":"328","endLine":113,"endColumn":43},{"ruleId":"295","severity":1,"message":"329","line":2,"column":21,"nodeType":"297","messageId":"298","endLine":2,"endColumn":35},{"ruleId":"330","severity":1,"message":"331","line":62,"column":29,"nodeType":"328","endLine":62,"endColumn":90},{"ruleId":"330","severity":1,"message":"331","line":63,"column":29,"nodeType":"328","endLine":63,"endColumn":91},{"ruleId":"330","severity":1,"message":"331","line":64,"column":29,"nodeType":"328","endLine":64,"endColumn":91},{"ruleId":"330","severity":1,"message":"331","line":65,"column":29,"nodeType":"328","endLine":65,"endColumn":91},{"ruleId":"317","severity":1,"message":"332","line":66,"column":8,"nodeType":"319","endLine":66,"endColumn":70,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":158,"column":129,"nodeType":"336","messageId":"337","endLine":158,"endColumn":138},{"ruleId":"295","severity":1,"message":"306","line":8,"column":13,"nodeType":"297","messageId":"298","endLine":8,"endColumn":18},{"ruleId":"338","severity":1,"message":"339","line":70,"column":41,"nodeType":"328","endLine":70,"endColumn":76},{"ruleId":"295","severity":1,"message":"306","line":9,"column":13,"nodeType":"297","messageId":"298","endLine":9,"endColumn":18},{"ruleId":"295","severity":1,"message":"340","line":18,"column":10,"nodeType":"297","messageId":"298","endLine":18,"endColumn":22},{"ruleId":"295","severity":1,"message":"341","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"295","severity":1,"message":"342","line":9,"column":41,"nodeType":"297","messageId":"298","endLine":9,"endColumn":47},{"ruleId":"295","severity":1,"message":"343","line":22,"column":19,"nodeType":"297","messageId":"298","endLine":22,"endColumn":28},{"ruleId":"295","severity":1,"message":"344","line":43,"column":20,"nodeType":"297","messageId":"298","endLine":43,"endColumn":30},{"ruleId":"317","severity":1,"message":"345","line":96,"column":8,"nodeType":"319","endLine":96,"endColumn":67,"suggestions":"346"},{"ruleId":"295","severity":1,"message":"347","line":1,"column":36,"nodeType":"297","messageId":"298","endLine":1,"endColumn":42},{"ruleId":"295","severity":1,"message":"300","line":2,"column":9,"nodeType":"297","messageId":"298","endLine":2,"endColumn":13},{"ruleId":"295","severity":1,"message":"303","line":3,"column":9,"nodeType":"297","messageId":"298","endLine":3,"endColumn":13},{"ruleId":"295","severity":1,"message":"348","line":3,"column":15,"nodeType":"297","messageId":"298","endLine":3,"endColumn":20},{"ruleId":"295","severity":1,"message":"349","line":6,"column":40,"nodeType":"297","messageId":"298","endLine":6,"endColumn":54},{"ruleId":"295","severity":1,"message":"344","line":20,"column":20,"nodeType":"297","messageId":"298","endLine":20,"endColumn":30},{"ruleId":"307","severity":1,"message":"308","line":66,"column":21,"nodeType":"309","messageId":"310","endLine":66,"endColumn":23},{"ruleId":"350","severity":1,"message":"351","line":82,"column":23,"nodeType":"352","messageId":"353","endLine":82,"endColumn":25},{"ruleId":"350","severity":1,"message":"351","line":82,"column":38,"nodeType":"352","messageId":"353","endLine":82,"endColumn":40},{"ruleId":"295","severity":1,"message":"354","line":21,"column":11,"nodeType":"297","messageId":"298","endLine":21,"endColumn":26},{"ruleId":"317","severity":1,"message":"355","line":45,"column":7,"nodeType":"319","endLine":45,"endColumn":28,"suggestions":"356"},{"ruleId":"317","severity":1,"message":"357","line":45,"column":23,"nodeType":"358","endLine":45,"endColumn":58},{"ruleId":"295","severity":1,"message":"296","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"313","line":3,"column":10,"nodeType":"297","messageId":"298","endLine":3,"endColumn":24},{"ruleId":"307","severity":1,"message":"308","line":10,"column":38,"nodeType":"309","messageId":"310","endLine":10,"endColumn":40},{"ruleId":"295","severity":1,"message":"359","line":4,"column":31,"nodeType":"297","messageId":"298","endLine":4,"endColumn":43},{"ruleId":"317","severity":1,"message":"360","line":20,"column":7,"nodeType":"319","endLine":20,"endColumn":9,"suggestions":"361"},{"ruleId":"295","severity":1,"message":"362","line":22,"column":11,"nodeType":"297","messageId":"298","endLine":22,"endColumn":22},{"ruleId":"295","severity":1,"message":"325","line":15,"column":5,"nodeType":"297","messageId":"298","endLine":15,"endColumn":25},{"ruleId":"307","severity":1,"message":"308","line":7,"column":38,"nodeType":"309","messageId":"310","endLine":7,"endColumn":40},{"ruleId":"317","severity":1,"message":"363","line":14,"column":5,"nodeType":"297","endLine":14,"endColumn":14,"suggestions":"364"},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'cover' is defined but never used.","'HashLoader' is defined but never used.","'Form' is defined but never used.","'login' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputGroup' is defined but never used.","'InputRightElement' is defined but never used.","'IoCloseOutline' is defined but never used.","'IoChevronDownCircleOutline' is defined but never used.","'keyword' is defined but never used.","'onDelSeacrh' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartItems.length'. Either include it or remove the dependency array.","ArrayExpression",["367"],"'Tfoot' is defined but never used.","'TableCaption' is defined but never used.","'handelshow' is assigned a value but never used.","'avatar' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AiOutlineHeart' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'history' and 'order'. Either include them or remove the dependency array.",["368"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'AiFillDelete' is defined but never used.","'axios' is defined but never used.","'VStack' is defined but never used.","'setImages' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sizes'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSselected' needs the current value of 'sizes'.",["369"],"'useRef' is defined but never used.","'Image' is defined but never used.","'IoIosArrowDown' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'productbyfilter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["370"],"Assignments to the 'slideinterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'TiArrowRight' is defined but never used.","React Hook useEffect has a missing dependency: 'product.images'. Either include it or remove the dependency array.",["371"],"'optionvalue' is assigned a value but never used.","React Hook useEffect contains a call to 'setIncart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cartItems, product._id] as a second argument to the useEffect Hook.",["372"],"no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [cart, cartItems.length]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, orderId, successPay, orderPay, successDeliver, userInfo, order, history]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch, productId, history, product, category, successUpdate, sizes]",{"range":"389","text":"390"},"Update the dependencies array to be: [dispatch, Cg, keyword, products]",{"range":"391","text":"392"},"Update the dependencies array to be: [product.images]",{"range":"393","text":"394"},"Add dependencies array: [cartItems, product._id]",{"range":"395","text":"396"},[3081,3087],"[cart, cartItems.length]",[2559,2621],"[dispatch, orderId, successPay, orderPay, successDeliver, userInfo, order, history]",[3471,3530],"[dispatch, productId, history, product, category, successUpdate, sizes]",[1763,1784],"[dispatch, Cg, keyword, products]",[603,605],"[product.images]",[807,807],", [cartItems, product._id]"]