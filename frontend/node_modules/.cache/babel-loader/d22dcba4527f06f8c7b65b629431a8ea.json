{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nexport const CreateOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","CreateOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"sources":["C:/Users/imjas/OneDrive/Desktop/final/Mern-Ecommerce-website/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { ORDER_CREATE_FAIL,ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\r\n\r\nexport const CreateOrder = (order) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}`,config)\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\nexport const payOrder = (orderId,paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`,{},config)\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders`,config)\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const listOrders = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/`,config)\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}